// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/signin": {
            "post": {
                "description": "sign in",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "sign in",
                "parameters": [
                    {
                        "description": "request format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.SignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.SignInResponse"
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "creates user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "creates user",
                "parameters": [
                    {
                        "description": "request format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.CreateUserResponse"
                        }
                    }
                }
            }
        },
        "/auth/token/update": {
            "post": {
                "description": "refreshes current session with token pair (access + refresh)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "refreshes session",
                "parameters": [
                    {
                        "description": "request format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RefreshSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.RefreshSessionResponse"
                        }
                    }
                }
            }
        },
        "/user/verify": {
            "post": {
                "description": "verifies user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "verifies user",
                "parameters": [
                    {
                        "description": "request format",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.VerificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    }
                }
            }
        }
    },
    "definitions": {
        "requests.CreateUserRequest": {
            "type": "object",
            "required": [
                "e-mail",
                "login",
                "nickname",
                "password"
            ],
            "properties": {
                "e-mail": {
                    "type": "string",
                    "example": "andrew123@qwerty.kom"
                },
                "login": {
                    "type": "string",
                    "example": "TopPlayer123"
                },
                "nickname": {
                    "type": "string",
                    "example": "Looser1123"
                },
                "password": {
                    "type": "string",
                    "example": "123superPassword"
                }
            }
        },
        "requests.CreateUserResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "example": 2
                }
            }
        },
        "requests.RefreshSessionRequest": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "requests.RefreshSessionResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expireAt": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "requests.SignInRequest": {
            "type": "object",
            "properties": {
                "login": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.SignInResponse": {
            "type": "object",
            "properties": {
                "accessToken": {
                    "type": "string"
                },
                "expireAt": {
                    "type": "integer"
                },
                "refreshToken": {
                    "type": "string"
                }
            }
        },
        "requests.VerificationRequest": {
            "type": "object",
            "required": [
                "code",
                "userId"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "userId": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.3.3.7",
	Host:             "202.49.176.191:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Smartri Backend",
	Description:      "I hate this app.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
